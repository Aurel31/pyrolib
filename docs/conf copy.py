# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
import shutil
from lemmings import __version__ as lemver
#import sphinx_rtd_theme
#import recommonmark

# -- Project information -----------------------------------------------------
project = "lemmings"
copyright = "Team COOP"
author = "Team COOP"

sys.path.insert(0, os.path.abspath("../src/" + project))


def _copy_readme():
    print("copying readme")
    shutil.copy("../README.md", "./readme_copy.md")

def _copy_changelog():
    print("copying changelog")
    shutil.copy('../CHANGELOG.md', './changelog_copy.md')

def _get_version():
    ver = lemver
    ver_split = [key for key in ver.split(".") if key]
    if len(ver_split) >= 3:
        release = ".".join(ver.split(".")[:3])
        version = ".".join(ver.split(".")[:2])
    elif len(ver_split) == 2:
        release = "%s.0" % ver
        version = ver
    elif len(ver_split) == 1:
        release = "%s.0.0" % ver.replace(".", "")
        version = "%s.0" % ver.replace(".", "")
    return release, version


# The full version, coming from setup.py
release, version = _get_version()

_copy_readme()
_copy_changelog()
# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "recommonmark",
    #    'rst2pdf.pdfbuilder', Necessary for PDF rendering
]


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]
# source_suffix = '.rst'

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

html_show_sourcelink = False
html_logo = "./_images/logo_project.gif"
html_favicon = "./_images/favicon.ico"
html_title = "Template module Documentation"
html_short_title = "Template Module"


# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# -- Options for PDF output ---------------------------------------------

pdf_documents = [
    ("index", u"rst2pdf", u"Sample rst2pdf doc", u"COOP"),
]

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "doc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, project + ".tex", project, author, "manual"),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, project, project + " Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        project,
        project + " Documentation",
        author,
        project,
        "One line description of project.",
        "Miscellaneous",
    ),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]


# Options for sphinxcontrib.apidoc
# The path to the module to document. This must be a path to a Python package.
# This path can be a path relative to the documentation source directory or an
# absolute path.
# Required.
# apidoc_module_dir = "../src/"+project

# The output directory. If it does not exist, it is created. This path is
# relative to the documentation source directory.
# Optional. Default to "api".
apidoc_output_dir = "api"

# Put documentation for each module on its own page. Otherwise there will be one
# page per (sub)package.
# Optional. Default to False.
apidoc_separate_modules = False

# When set to True, put module documentation before submodule documentation.
# Optional. Default to False.
apidoc_module_first = False
